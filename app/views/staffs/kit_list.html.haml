.navbar
  %ul.nav
    %li= link_to_function(fa_icon("print", text: (t 'actions.print')), "javascript:print()")

- provide(:title, 'Staff Details')
- model_class = Staff
.page-header
  %h1= t 'staffs.kit_list', :default => model_class.model_name.human.pluralize
  %h2= t 'staffs.navy'

%h4= t 'staffs.detail'
%table.table.table-bordered
  %thead
    %tr
      %th= t 'staffs.name'
      %th= t 'staffs.id_no'
      %th= t 'staffs.rank_id'


  %tbody
    %tr
      %td= @staff.name
      %td= @staff.id_no
      %td= check_kin {@staff.rank.name}


    - if @staff.staff_measurements == []
      
    - else

      %table.table.table-bordered
        %thead
          %tr
            %th{:align => "left"}= t 'uniform_items.uniform_item_name'
            %th= t 'staff_measurements.measurement'
            %th= t 'staff_measurements.value'
            %th= t 'staff_measurements.unit_type'
        %tbody 
          - for staff_measurement in @staff.staff_measurements
            %tr
              %td= staff_measurement.uniform_item.uniform_details
              %td{:align => "center"}= staff_measurement.measurement_type
              %td{:align => "center"}= staff_measurement.value
              %td{:align => "center"}= check_kin {staff_measurement.unit_type.short_name}

    - if @staff.kit_staffs == []
      
    - else
      %table.table.table-bordered
        %thead
          %tr
            %th= t 'kit_staffs.title'
            %th{:align => "left"}= t 'kit_staffs.kit'
        %tbody 
          - main_ancestor=[]
          - @uniform_stock_ids = UniformStockIssue.where('issued_to=?', @staff.id).map(&:stock_id)
          - @uniform_item_ids = UniformStock.where('id IN (?)', @uniform_stock_ids).map(&:uniform_id)
          - for kit_staff in @staff.kit_staffs
            - count=0 
            - for item in kit_staff.kit.kit_uniforms
              %tr
                %td=item.uniform_item.uniform_details
                %td 
                  - if count == 0
                    =kit_staff.kit.kit_details
                    - count+=1
                %td
                  - provision = item.kit_qty(@staff.gender,@staff.rank.rate,@staff.rank.shortname)
                  = provision
                %td
                  - stock = UniformStock.where('uniform_id=?',item.uniform_id)
                  - if stock.count>0
                    - stockid = stock[0].id
                    - provided = UniformStockIssue.where('issued_to=? AND stock_id=?', @staff.id, stockid).sum(:quantity)
                  - else
                    - provided=0
                  - unless provision.nil? || provision.blank?
                    = provided
                %td
                  - unless provision.nil? || provision.blank?
                    = provision - provided
            - for ancestor in kit_staff.kit.ancestor_ids
              - if main_ancestor.include?(ancestor) == false
                - main_ancestor << ancestor 
                - count2=0
                - if !@staff.kit_staffs.pluck(:kit_id).include?(ancestor)
                  - for kit_item in Kit.find(ancestor).kit_uniforms
                    %tr
                      %td=kit_item.uniform_item.uniform_details
                      %td 
                        - if count2 == 0
                          = Kit.find(ancestor).kit_details
                          - count2+=1
                      %td
                        - provision = kit_item.kit_qty(@staff.gender,@staff.rank.rate,@staff.rank.shortname)
                        = provision
                      %td
                        - stock = UniformStock.where('uniform_id=?',kit_item.uniform_id)
                        - if stock.count>0
                          - stockid = stock[0].id
                          - provided = UniformStockIssue.where('issued_to=? AND stock_id=?', @staff.id, stockid).sum(:quantity)
                        - else
                          - provided=0
                        - unless provision.nil? || provision.blank?
                          = provided
                      %td
                        - unless provision.nil? || provision.blank?
                          = provision - provided
            - @staff.kit_staffs.pluck(:kit_id).include?(kit_staff.kit_id)
            - kit_staff.kit.ancestor_ids.count
            - kit_staff.kit.ancestor_ids
            - @staff.kit_staffs.map(&:kit_id)






 